version: "3.9"
services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: 3.2
        USER_UID: 1000
        USER_GID: 1000
    command: bundle exec rails s -p 3000 -b 0.0.0.0
    ports:
      - "3000:3000"
    image: miru-web:latest
    working_dir: /app
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules
    environment:
      - DATABASE_URL=postgres://postgres:postgres@database:5432/
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL="true"
      - POSTGRES_PASSWORD="postgres"
      - POSTGRES_USER="postgres"
      - REDIS_URL=redis://redis:6379/1
      - ELASTICSEARCH_URL=http://elastic:x2Sy5FK51zu@elasticsearch:9200
      - PIDFILE=/tmp/pids/server.pid
    depends_on:
      - database
      - redis
      - elasticsearch
    tmpfs:
      - /tmp/pids/
    network_mode: service:database

  database:
    image: postgres:13.8
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    image: redis:6.2.7
    command: redis-server
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  webpack:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    command: bin/webpacker-dev-server
    image: miru-web:latest
    ports:
      - "3035:3035"
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - DATABASE_URL=postgres://postgres:postgres@database:5432/
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL="true"
      - POSTGRES_PASSWORD="postgres"
      - POSTGRES_USER="postgres"
      - REDIS_URL=redis://redis:6379/1
      - ELASTICSEARCH_URL=http://elastic:x2Sy5FK51zu@elasticsearch:9200
    depends_on:
      - database

  sidekiq:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules
    environment:
      - DATABASE_URL=postgres://postgres:postgres@database:5432/
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - redis
      - database
      - app

  elasticsearch:
    image: elasticsearch:7.13.3
    environment:
      discovery.type: single-node
      network.host: 0.0.0.0
      xpack.security.enabled: "true"
      ELASTIC_PASSWORD: "x2Sy5FK51zu"
    ports:
      - "9200:9200"

volumes:
  gem_cache:
  postgres:
  node_modules:
  redis:
